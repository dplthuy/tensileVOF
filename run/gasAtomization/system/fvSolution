/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "./initialConditions"

solvers
{
    "alpha.melt.*"
    {
        isoFaceTol      1e-12;
        surfCellTol     1e-8;
        nAlphaBounds    3;
        snapTol         1e-8;
        clip            true;
        reconstructionScheme plicRDF;
        
	    writeSurfCells false;
	    writeBoundedCells false;
	    writeIsoSurfaces false;
        

        nAlphaSubCycles 2;
	    nAlphaCorr	1;
        cAlpha          1; // Note: cAlpha is not used by isoAdvector but must
                           // be specified because interfacePropertes object
                           // reads it during construction.
    }

    "pcorr.*"
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-08;
            relTol          0;
            smoother        DICGaussSeidel;
        }
        tolerance       1e-08;
        relTol          0;
        maxIter         100;
    }

    ".*(rho|rhoFinal)"
    {
        solver          diagonal;
    }

    p_rgh
    {
        solver          GAMG;
        tolerance       1e-10;
        relTol          0.001;
        smoother        GaussSeidel;
    }

    p_rghFinal
    {
        solver          GAMG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-07;
            relTol          0;
            nVcycles        2;
            smoother        DICGaussSeidel;
            nPreSweeps      2;
        }
        tolerance       1e-10;
        relTol          0;
        smoother	 GaussSeidel;
        maxIter         50;
    }

    UFinal
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-08;
        relTol          0;
        nSweeps         1;
    }

    "(T|k|epsilon|B|nuTilda).*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-07;
        relTol          0;
    }
}

PIMPLE
{
    correctPhi          yes;
    momentumPredictor   yes;
    transonic           yes;
    nOuterCorrectors    1;
    nCorrectors         3;
    nNonOrthogonalCorrectors 0;

    // Parameters for alphaRegionProperties
    alphaThreshold      1e-8;
    NCellsMin           5;
    calculateRegionProperties true;
    VOFCloudWriteInterval $writeCloudEvery;
}

relaxationFactors
{
	fields
	{
	   p_rgh	0.7;
	   p_rghFinal	1.0;
	   alpha.melt   0.7;
	}
	equations
	{
	   "(U|T|rho)"	0.7;
	   "(U|T|rho)Final"	1.0;
	}
}
// ************************************************************************* //
